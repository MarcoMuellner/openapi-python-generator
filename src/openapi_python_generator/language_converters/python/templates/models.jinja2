from typing import *
from pydantic import BaseModel, Field
{%  for property in properties %}
{% if property.type.import_types is not none %}
{% for import_type in property.type.import_types %}
{{ import_type }}
{% endfor %}
{% endif %}
{% endfor %}
{% for parent_component in parent_components %}
{% if parent_component.import_type is not none %}
{{ parent_component.import_type }}
{% endif %}
{% endfor %}

class {{ schema_name }}({% for parent_component in parent_components %}{{ parent_component.name }},{% endfor %}BaseModel):
    """
    {{ schema.title }} model
    {% if schema.description != None %}
    {{ schema.description }}
    {% endif %}
    """
    {% for property in properties %}

    {{ property.name | replace("@","") | replace("-","_") }} : {{ property.type.converted_type | safe }} = Field(alias="{{ property.name }}" {% if not property.required %}, default = {{ property.default }} {% endif %})
    {% endfor %}
