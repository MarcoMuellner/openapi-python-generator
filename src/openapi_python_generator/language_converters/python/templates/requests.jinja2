def {{ operation_id }}(api_config_override : Optional[APIConfig] = None{% if params.strip() %}, *, {{ params.rstrip(', ') }}{% endif %}) -> {% if return_type.type is none or return_type.type.converted_type is none %}None{% else %}{{ return_type.type.converted_type}}{% endif %}:
    api_config = api_config_override if api_config_override else APIConfig()

    base_path = api_config.base_path
    path = f'{{ path_name }}'
    headers = {
        'Content-Type': 'application/json',
        'Accept': 'application/json',
        'Authorization': f'Bearer { api_config.get_access_token() }',
        {{ header_params | join(',\n') | safe }}
        }
    query_params : Dict[str,Any]  = {
    {% if query_params|length > 0 %}
        {{ query_params | join(',\n') | safe }}
    {% endif %}
    }

    query_params = {key:value for (key,value) in query_params.items() if value is not None}

    response = requests.request(
        '{{ method }}',
        f'{base_path}{path}',
        headers=headers,
        params=query_params,
        verify=api_config.verify,
        {% if body_param %}
        {% if use_orjson %}
        content=orjson.dumps({{ body_param }})
        {% else %}
        json = {{ body_param }}
        {% endif %}
        {% endif %}
    )
    if response.status_code != {{ return_type.status_code }}:
        raise HTTPException(response.status_code, f'{{ operation_id }} failed with status code: {response.status_code}')
    else:
        {# Conditional body parsing: avoid calling .json() for 204 #}
        body = None if {{ return_type.status_code }} == 204 else response.json()

{% if return_type.type is none or return_type.type.converted_type is none %}
    return None
{% elif return_type.complex_type %}
    {%- if return_type.list_type is none %}
    return {{ return_type.type.converted_type }}(**body) if body is not None else {{ return_type.type.converted_type }}()
    {%- else %}
    return [{{ return_type.list_type }}(**item) for item in body]
    {%- endif %}
{% else %}
    return body
{% endif %}
